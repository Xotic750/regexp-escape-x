{"version":3,"sources":["../src/regexp-escape-x.js"],"names":[],"mappings":"AAAA,OAAO,wBAAP,MAAqC,+BAArC;AAEA,IAAM,WAAW,GAAG,sBAApB;WACkB,E;IAAX,O,QAAA,O;AAEP;;;;;;;;AAOA,eAAe,SAAS,YAAT,CAAsB,MAAtB,EAA8B;AAC3C,SAAO,OAAO,CAAC,IAAR,CAAa,wBAAwB,CAAC,MAAD,CAArC,EAA+C,WAA/C,EAA4D,MAA5D,CAAP;AACD","file":"regexp-escape-x.esm.js","sourcesContent":["import requireCoercibleToString from 'require-coercible-to-string-x';\n\nconst syntaxChars = /[\\^$\\\\.*+?()[\\]{}|]/g;\nconst {replace} = '';\n\n/**\n * Method to safely escape `RegExp` special tokens for use in `new RegExp`.\n *\n * @param {string} string - The string to be escaped.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @returns {string} The escaped string.\n */\nexport default function regExpEscape(string) {\n  return replace.call(requireCoercibleToString(string), syntaxChars, '\\\\$&');\n}\n"]}